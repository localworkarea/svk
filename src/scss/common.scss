* {
  &::-webkit-scrollbar {
    width: 5px;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--primary);
    // border-radius: 20px;
  }
}

// filters ====================
/*
#111B51 -- blue
filter: invert(8%) sepia(55%) saturate(3862%) hue-rotate(227deg) brightness(89%) contrast(98%);


#FFFFFF -- white
filter: invert(100%) sepia(100%) saturate(0%) hue-rotate(55deg) brightness(103%) contrast(102%);


*/

// // LENIS плавная прокрутка ===============================
html.lenis,
html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}



[class*="__container"] {
  width: 100%;
  padding-inline: toRem(25);
  margin-inline: auto;
  max-width: toRem(1370);
  // @include adaptiveValue("max-width", 1580, 1180,0,1920.98,1440.98);
}




// SPLIT TYPE =============================================
.split-lines,
.split-words,
.split-chars,
.split-both {
  font-kerning: none;
}


// .element {
//   .line {
//     overflow: hidden;
//   }
//   .word {
//     transform: translateY(100%);
//     transition: transform .55s cubic-bezier(.22,.89,.34,.96);
//   }
//   &._watcher-view {
//     .word {
//       transform: translateY(0);
//       transition-delay: calc(var(--index) * .03s);
//     }
//   }
// }
// ================================================================


%lineElements {
  overflow: hidden;
  -webkit-line-clamp: 3;
  display: box;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  white-space: normal;
}




// Ticker =================================
[data-ticker] {
  overflow: hidden;
  width: max-content;
  display: flex;
  align-items: center;

  >* {
    display: flex;
    flex-wrap: nowrap;
  }
}

@keyframes scroll {
  to {
    transform: translateX(-100%);
  }
}

@keyframes scroll-rev {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(0%);
  }
}

// ========================================



%ibg {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

%img {
  width: 100%;
  height: auto;
}

%gridCenter {
  display: grid;
  place-items: center;
}

%flexCenter {
  display: flex;
  align-items: center;
}

%absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

%absoluteTopLeft {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// %elImg {
//      background-repeat: no-repeat;
//     background-position: center;
//     background-size:contain;
//     @media (orientation: landscape) {
//       background-image: url('@img/elements/elements-1-pc.png');
//     }
//     @media (orientation: portrait) {    
//       background-image: url('@img/elements/elements-1-mb.png');
//     }
// }
%imgContain {
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

%imgCover {
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

%fontProst {
  font-family: "ProstoOne";
  // font-weight: 400;
}

%hoverLine {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    bottom: toRem(-2);
    left: 0;
    width: 100%;
    height: toRem(1);
    background-color: var(--white);
    transform: scale(0, 1);
    transform-origin: 100% 50%;
    transition: transform .8s cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  @media (any-hover: hover) {
    &:hover {
      &::before {
        transform: scale(1);
        transform-origin: 0 50%;
      }
    }
  }
}


// == TITLES ================
.title-60-35 {
  @extend %fontProst;
  @include adaptiveValue("font-size", 60, 35, 0, 1440.98, 480.98);
  line-height: 1.07;
}



// == TEXTS =================



// == MARGINS =================
.mb-33-19 {
  @include adaptiveValue("margin-bottom", 33, 19, 0, 1440.98, 480.98);
}


// == PADDINGS ==================


.fw-600 {
  font-weight: 600;
}


// == BUTTONS ==================
%arrBtn {
  content: '';
  position: absolute;
  pointer-events: none;
  top: 50%;
  right: 0%;
  transform: translate(55%, -50%);
  @extend %imgContain;
  background-image: url("@img/icons/arr-white.svg");
  @include adaptiveValue("width", 80, 61, 0, 1440.98, 480.98);
  aspect-ratio: 77/10;
  transition: transform .45s ease;
}

.btn {
  position: relative;
  @extend %fontProst;
  @extend %gridCenter;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  @include adaptiveValue("font-size", 14, 11, 0, 1440.98, 480.98);
  @include adaptiveValue("min-height", 50, 40, 0, 1440.98, 480.98);
  border-radius: toRem(100);
  max-width: max-content;
  width: 100%;

  transition: background-color .3s ease, color .3s ease;

  span {
    display: inline-block;
    position: relative;
    z-index: 3;
  }

  &::before {
    @extend %arrBtn;
  }

  @media (any-hover: hover) {
    &:hover {
      &::before {
        transform: translate(70%, -50%);
      }

      .btn-arrows {
        &::before {
          transform: translate(70%, -50%);
        }
      }
    }
  }

  &:active {
    &::before {
      transform: translate(70%, -50%);
    }

    .btn-arrows {
      &::before {
        transform: translate(70%, -50%);
      }
    }

  }

  .btn-txt {
    @media (min-width:$mobileSmall) {
      left: -2%;
    }

    @media (max-width:$mobileSmall) {
      left: -1%;
    }
  }

  .btn-arrows {
    @extend %absoluteTopLeft;
    overflow: hidden;
    pointer-events: none;

    &::before {
      @extend %arrBtn;
      content: '';
      background-image: url("@img/icons/arr-blue.svg");
    }
  }

  // .btn--light
  &--light {
    background-color: var(--white);
    color: var(--primary);
    // @media (any-hover: hover){
    //   &:hover{
    //     background-color: var(--primary);
    //     color: var(--white);
    //     border: 1px solid var(--white);
    //   }
    // }
  }

  // .btn--dark
  &--dark {
    background-color: var(--primary);
    color: var(--white);
  }

  &--size-a {
    @include adaptiveValue("min-width", 270, 216, 0, 1440.98, 480.98);
  }

  &--height-a {}
}

